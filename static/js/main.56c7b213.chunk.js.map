{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","Components/About.js","App.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","react_router_dom","to","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","onChange","event","target","value","rows","placeholder","backgroundColor","disabled","length","res","showAlert","arr","split","i","join","str","s","curr","j","filter","elm","About","myStyle","aria-labelledby","data-bs-parent","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","Components_Alert","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.56c7b213.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"35px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          onClick={props.toggleMode}\r\n        />\r\n        <label\r\n          className={`form-check-label text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n          htmlFor=\"flexSwitchCheckDefault\"\r\n        >\r\n          Dark Mode\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    let res = text.toUpperCase();\r\n    setText(res);\r\n    props.showAlert(\"TEXT CHANGED TO UPPERCASE\", \"success\");\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    let arr = text.toLowerCase().split(\" \");\r\n    for (let i = 0; i < arr.length; i++) {\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n    }\r\n    let res = arr.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Text Changed To Title Case\", \"success\");\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    let res = text.toLowerCase();\r\n    setText(res);\r\n    props.showAlert(\"text changed to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleOnClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared Text\", \"success\");\r\n  };\r\n\r\n  const handleOnInverse = () => {\r\n    let str = text.split(\" \");\r\n    for (let i = 0; i < str.length; i++) {\r\n      let s = str[i],\r\n        curr = \"\";\r\n      for (let j = 0; j < s.length; j++) {\r\n        if (s.charAt(j) === s.charAt(j).toUpperCase())\r\n          curr += s.charAt(j).toLowerCase();\r\n        else curr += s.charAt(j).toUpperCase();\r\n      }\r\n      str[i] = curr;\r\n    }\r\n    let res = str.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Inversed Case of the text\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <h1\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        {props.heading}\r\n      </h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"inputBox\" className=\"form-label\"></label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          onChange={handleOnChange}\r\n          value={text}\r\n          id=\"inputBox\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter text here\"\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"#283158\",\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleUpClick}\r\n      >\r\n        Convert to UpperCase\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleTitleClick}\r\n      >\r\n        Convert to Title Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-3\"\r\n        onClick={handleLowerClick}\r\n      >\r\n        Convert to Lower Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleOnClear}\r\n      >\r\n        Clear Text\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleOnInverse}\r\n      >\r\n        Inverse Case\r\n      </button>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h4 className=\"my-3 mx-10\">Your Text Summary</h4>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((elm) => {\r\n              return elm.length !== 0;\r\n            }).length\r\n          }\r\n          <i> words</i> <b>and </b>\r\n          {text.length}\r\n          <i> characters</i>\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(/\\s + /).filter((elm) => {\r\n              return elm.length !== 0;\r\n            }).length}\r\n          <i> Minutes to read</i>\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { useState } from \"react\";\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(66 47 95)\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h3 className=\"mx-10 my-10\">About Us</h3>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Accordion Item #1</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classNamees that we use to style each element. These classNamees\r\n                control the overall appearance, as well as the showing and\r\n                hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Accordion Item #2</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classNamees that we use to style each element. These\r\n                classNamees control the overall appearance, as well as the\r\n                showing and hiding via CSS transitions. You can modify any of\r\n                this with custom CSS or overriding our default variables. It's\r\n                also worth noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={myStyle}\r\n              >\r\n                <strong>Accordion Item #3</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classNamees that we use to style each element. These\r\n                classNamees control the overall appearance, as well as the\r\n                showing and hiding via CSS transitions. You can modify any of\r\n                this with custom CSS or overriding our default variables. It's\r\n                also worth noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport About from \"./Components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#340e44\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark Mode Disabled\", \"danger\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <BrowserRouter>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Textform\n                  heading=\"Enter the text to analyze\"\n                  showAlert={showAlert}\n                  mode={mode}\n                />\n              }\n            />\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\n          </Routes>\n        </div>\n      </BrowserRouter> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Textform\n          heading=\"Enter the text to analyze\"\n          showAlert={showAlert}\n          mode={mode}\n        />\n        <About mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}