{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","App.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","onChange","event","target","value","rows","placeholder","backgroundColor","disabled","length","res","showAlert","arr","split","i","join","str","s","curr","j","filter","elm","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","document","body","Components_Alert","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8d15c790.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"35px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          onClick={props.toggleMode}\r\n        />\r\n        <label\r\n          className={`form-check-label text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n          htmlFor=\"flexSwitchCheckDefault\"\r\n        >\r\n          Dark Mode\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    let res = text.toUpperCase();\r\n    setText(res);\r\n    props.showAlert(\"TEXT CHANGED TO UPPERCASE\", \"success\");\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    let arr = text.toLowerCase().split(\" \");\r\n    for (let i = 0; i < arr.length; i++) {\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n    }\r\n    let res = arr.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Text Changed To Title Case\", \"success\");\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    let res = text.toLowerCase();\r\n    setText(res);\r\n    props.showAlert(\"text changed to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleOnClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared Text\", \"success\");\r\n  };\r\n\r\n  const handleOnInverse = () => {\r\n    let str = text.split(\" \");\r\n    for (let i = 0; i < str.length; i++) {\r\n      let s = str[i],\r\n        curr = \"\";\r\n      for (let j = 0; j < s.length; j++) {\r\n        if (s.charAt(j) === s.charAt(j).toUpperCase())\r\n          curr += s.charAt(j).toLowerCase();\r\n        else curr += s.charAt(j).toUpperCase();\r\n      }\r\n      str[i] = curr;\r\n    }\r\n    let res = str.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Inversed Case of the text\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <h1\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        {props.heading}\r\n      </h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"inputBox\" className=\"form-label\"></label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          onChange={handleOnChange}\r\n          value={text}\r\n          id=\"inputBox\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter text here\"\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"#283158\",\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleUpClick}\r\n      >\r\n        Convert to UpperCase\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleTitleClick}\r\n      >\r\n        Convert to Title Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-3\"\r\n        onClick={handleLowerClick}\r\n      >\r\n        Convert to Lower Case\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleOnClear}\r\n      >\r\n        Clear Text\r\n      </button>\r\n      <button\r\n        disabled={text.length === 0}\r\n        className=\"btn btn-primary mx-1 my-1\"\r\n        onClick={handleOnInverse}\r\n      >\r\n        Inverse Case\r\n      </button>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h4 className=\"my-3 mx-10\">Your Text Summary</h4>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((elm) => {\r\n              return elm.length !== 0;\r\n            }).length\r\n          }\r\n          <i> words</i> <b>and </b>\r\n          {text.length}\r\n          <i> characters</i>\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(/\\s + /).filter((elm) => {\r\n              return elm.length !== 0;\r\n            }).length}\r\n          <i> Minutes to read</i>\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import About from \"./Components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#340e44\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark Mode Disabled\", \"danger\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <BrowserRouter>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <Textform\n                  heading=\"Enter the text to analyze\"\n                  showAlert={showAlert}\n                  mode={mode}\n                />\n              }\n            />\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\n          </Routes>\n        </div>\n      </BrowserRouter> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Textform\n          heading=\"Enter the text to analyze\"\n          showAlert={showAlert}\n          mode={mode}\n        />\n        {/* <About mode={mode} /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}