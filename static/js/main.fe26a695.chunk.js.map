{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textform.js","App.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","onChange","event","console","log","target","value","rows","placeholder","backgroundColor","res","showAlert","arr","split","i","length","join","str","s","curr","j","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","document","body","Components_Alert","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fe26a695.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-check form-switch\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          onClick={props.toggleMode}\r\n        />\r\n        <label\r\n          className={`form-check-label text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n          htmlFor=\"flexSwitchCheckDefault\"\r\n        >\r\n          Dark Mode\r\n        </label>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"text changed to UPPERCASE\");\r\n    let res = text.toUpperCase();\r\n    setText(res);\r\n    props.showAlert(\"TEXT CHANGED TO UPPERCASE\", \"success\");\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    // console.log(\"Running title case function\");\r\n    let arr = text.toLowerCase().split(\" \");\r\n    for (let i = 0; i < arr.length; i++) {\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n    }\r\n    let res = arr.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Text Changed To Title Case\", \"success\");\r\n  };\r\n\r\n  const handleLowerClick = () => {\r\n    // console.log(\"Lower case function running\");\r\n    let res = text.toLowerCase();\r\n    setText(res);\r\n    props.showAlert(\"text changed to lowercase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Handle On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleOnClear = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared Text\", \"success\");\r\n  };\r\n\r\n  const handleOnInverse = () => {\r\n    let str = text.split(\" \");\r\n    for (let i = 0; i < str.length; i++) {\r\n      let s = str[i],\r\n        curr = \"\";\r\n      for (let j = 0; j < s.length; j++) {\r\n        if (s.charAt(j) === s.charAt(j).toUpperCase())\r\n          curr += s.charAt(j).toLowerCase();\r\n        else curr += s.charAt(j).toUpperCase();\r\n      }\r\n      str[i] = curr;\r\n    }\r\n    let res = str.join(\" \");\r\n    setText(res);\r\n    props.showAlert(\"Inversed Case of the text\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <h1\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        {props.heading}\r\n      </h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"inputBox\" className=\"form-label\"></label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          onChange={handleOnChange}\r\n          value={text}\r\n          id=\"inputBox\"\r\n          rows=\"8\"\r\n          placeholder=\"Enter text here\"\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>\r\n        Convert to UpperCase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleTitleClick}>\r\n        Convert to Title Case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleLowerClick}>\r\n        Convert to Lower Case\r\n      </button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleOnClear}>\r\n        Clear Text\r\n      </button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleOnInverse}>\r\n        Inverse Case\r\n      </button>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h4 className=\"my-3 mx-10\">Your Text Summary</h4>\r\n        <p>\r\n          {text.split(\" \").length}{\" \"}\r\n          <i>\r\n            words <b>and </b>\r\n          </i>\r\n          {text.length}\r\n          <i> characters</i>\r\n        </p>\r\n        <p>\r\n          {0.008 * text.split(\" \").length}\r\n          <i> Minutes to read</i>\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import About from \"./Components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#340e44\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark Mode Disabled\", \"danger\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Route */}\n        {/* // exact */}\n        {/* // path=\"/\" */}\n        {/* // elem</Routes>ent={ */}\n        <Textform\n          heading=\"Enter the text to analyze\"\n          showAlert={showAlert}\n          mode={mode}\n        />\n        {/* // } */}\n        {/* // /> */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n        {/* </Routes> */}\n      </div>\n      {/* // </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}